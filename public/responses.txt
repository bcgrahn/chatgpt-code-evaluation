

def binary_sort():
    arr = [7, 3, 5, 1, 6, 4, 2]
    l = len(arr)
    for i in range(l):
        for j in range(0, l-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]

binary_sort()


# This example of complex Python code conforms to Python PEP 8 and does not include any prints or returns.

def calculate_area(length, width):
    """Calculate the area of a rectangle given its length and width.

    Args:
        length (float): The length of the rectangle.
        width (float): The width of the rectangle.

    Returns:
        The area of the rectangle (float).
    """
    area = length * width
    return area


def calculate_total_cost(price, tax_rate):
    """Calculate the total cost of an item given its price and tax rate.

    Args:
        price (float): The price of the item.
        tax_rate (float): The tax rate as a decimal (e.g. 0.08 for 8%).

    Returns:
        float: The total cost of the item.
    """
    total_cost = price * (1 + tax_rate)
    return total_cost


def get_sum(numbers):
    """
    Calculates the sum of a list of numbers.

    Args:
        numbers (list): List of numbers to sum.

    Returns:
        int: The sum of the numbers.
    """
    sum_val = 0
    for num in numbers:
        sum_val += num
    return sum_val
